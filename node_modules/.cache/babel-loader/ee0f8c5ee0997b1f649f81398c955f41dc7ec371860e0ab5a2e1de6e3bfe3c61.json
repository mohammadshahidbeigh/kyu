{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahi\\\\Dropbox\\\\PC\\\\Downloads\\\\frontend-20241207T060521Z-001\\\\frontend\\\\src\\\\submit.js\",\n  _s = $RefreshSig$();\n// submit.js\n\nimport { useStore } from \"./store\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SubmitButton = () => {\n  _s();\n  const {\n    nodes,\n    edges\n  } = useStore();\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/pipelines/parse\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: `pipeline=${encodeURIComponent(JSON.stringify({\n          nodes,\n          edges\n        }))}`\n      });\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n      alert(`Pipeline Analysis:\\n\\n` + `Number of Nodes: ${data.num_nodes}\\n` + `Number of Edges: ${data.num_edges}\\n` + `Is DAG: ${data.is_dag ? \"Yes\" : \"No\"}`);\n    } catch (error) {\n      alert(\"Error submitting pipeline: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleSubmit,\n    disabled: isLoading,\n    style: {\n      position: \"fixed\",\n      bottom: \"20px\",\n      right: \"20px\",\n      padding: \"12px 24px\",\n      fontSize: \"16px\",\n      backgroundColor: \"#4CAF50\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"4px\",\n      cursor: isLoading ? \"wait\" : \"pointer\",\n      opacity: isLoading ? 0.7 : 1\n    },\n    children: isLoading ? \"Processing...\" : \"Submit Pipeline\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(SubmitButton, \"Xb7WvFdvKMGkJ9UxJuoiMSVjXjg=\", false, function () {\n  return [useStore];\n});\n_c = SubmitButton;\nvar _c;\n$RefreshReg$(_c, \"SubmitButton\");","map":{"version":3,"names":["useStore","useState","jsxDEV","_jsxDEV","SubmitButton","_s","nodes","edges","isLoading","setIsLoading","handleSubmit","response","fetch","method","headers","body","encodeURIComponent","JSON","stringify","data","json","error","Error","alert","num_nodes","num_edges","is_dag","message","onClick","disabled","style","position","bottom","right","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/shahi/Dropbox/PC/Downloads/frontend-20241207T060521Z-001/frontend/src/submit.js"],"sourcesContent":["// submit.js\n\nimport {useStore} from \"./store\";\nimport {useState} from \"react\";\n\nexport const SubmitButton = () => {\n  const {nodes, edges} = useStore();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSubmit = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:8000/pipelines/parse\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `pipeline=${encodeURIComponent(JSON.stringify({nodes, edges}))}`,\n      });\n\n      const data = await response.json();\n\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      alert(\n        `Pipeline Analysis:\\n\\n` +\n          `Number of Nodes: ${data.num_nodes}\\n` +\n          `Number of Edges: ${data.num_edges}\\n` +\n          `Is DAG: ${data.is_dag ? \"Yes\" : \"No\"}`\n      );\n    } catch (error) {\n      alert(\"Error submitting pipeline: \" + error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <button\n      onClick={handleSubmit}\n      disabled={isLoading}\n      style={{\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        padding: \"12px 24px\",\n        fontSize: \"16px\",\n        backgroundColor: \"#4CAF50\",\n        color: \"white\",\n        border: \"none\",\n        borderRadius: \"4px\",\n        cursor: isLoading ? \"wait\" : \"pointer\",\n        opacity: isLoading ? 0.7 : 1,\n      }}\n    >\n      {isLoading ? \"Processing...\" : \"Submit Pipeline\"}\n    </button>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,SAAQA,QAAQ,QAAO,SAAS;AAChC,SAAQC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAACC,KAAK;IAAEC;EAAK,CAAC,GAAGP,QAAQ,CAAC,CAAC;EACjC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAE,YAAYC,kBAAkB,CAACC,IAAI,CAACC,SAAS,CAAC;UAACZ,KAAK;UAAEC;QAAK,CAAC,CAAC,CAAC;MACtE,CAAC,CAAC;MAEF,MAAMY,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,KAAK,EAAE;QACd,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACE,KAAK,CAAC;MAC7B;MAEAE,KAAK,CACH,wBAAwB,GACtB,oBAAoBJ,IAAI,CAACK,SAAS,IAAI,GACtC,oBAAoBL,IAAI,CAACM,SAAS,IAAI,GACtC,WAAWN,IAAI,CAACO,MAAM,GAAG,KAAK,GAAG,IAAI,EACzC,CAAC;IACH,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdE,KAAK,CAAC,6BAA6B,GAAGF,KAAK,CAACM,OAAO,CAAC;IACtD,CAAC,SAAS;MACRlB,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IACEyB,OAAO,EAAElB,YAAa;IACtBmB,QAAQ,EAAErB,SAAU;IACpBsB,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE,WAAW;MACpBC,QAAQ,EAAE,MAAM;MAChBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAEhC,SAAS,GAAG,MAAM,GAAG,SAAS;MACtCiC,OAAO,EAAEjC,SAAS,GAAG,GAAG,GAAG;IAC7B,CAAE;IAAAkC,QAAA,EAEDlC,SAAS,GAAG,eAAe,GAAG;EAAiB;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEb,CAAC;AAACzC,EAAA,CAvDWD,YAAY;EAAA,QACAJ,QAAQ;AAAA;AAAA+C,EAAA,GADpB3C,YAAY;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}