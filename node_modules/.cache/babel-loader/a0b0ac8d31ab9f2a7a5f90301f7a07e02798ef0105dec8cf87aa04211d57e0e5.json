{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shahi\\\\Dropbox\\\\PC\\\\Downloads\\\\frontend-20241207T060521Z-001\\\\frontend\\\\src\\\\nodes\\\\textNode.js\",\n  _s = $RefreshSig$();\n// textNode.js\n\nimport { BaseNode } from \"./BaseNode\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextNode = ({\n  id,\n  data\n}) => {\n  _s();\n  const [currText, setCurrText] = useState((data === null || data === void 0 ? void 0 : data.text) || \"{{input}}\");\n  const [variables, setVariables] = useState([]);\n  const textareaRef = useRef(null);\n\n  // Function to extract variables from text\n  const extractVariables = text => {\n    const matches = text.match(/\\{\\{([^}]+)\\}\\}/g) || [];\n    return [...new Set(matches.map(match => match.slice(2, -2).trim()))];\n  };\n\n  // Update variables when text changes\n  useEffect(() => {\n    const newVars = extractVariables(currText);\n    setVariables(newVars);\n  }, [currText]);\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = \"auto\";\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [currText]);\n  return /*#__PURE__*/_jsxDEV(BaseNode, {\n    id: id,\n    title: \"Text\",\n    inputs: variables.map(v => ({\n      id: v\n    })),\n    outputs: [{\n      id: \"output\"\n    }],\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: textareaRef,\n      className: \"node-input\",\n      value: currText,\n      onChange: e => setCurrText(e.target.value),\n      placeholder: \"Enter text with {{variables}}\",\n      style: {\n        minHeight: \"60px\",\n        width: \"100%\",\n        resize: \"none\",\n        overflow: \"hidden\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), variables.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"variables-list\",\n      children: [\"Variables: \", variables.join(\", \")]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(TextNode, \"HD4gNyL6mb86WPFI+3xQlBbGf9A=\");\n_c = TextNode;\nvar _c;\n$RefreshReg$(_c, \"TextNode\");","map":{"version":3,"names":["BaseNode","useState","useEffect","useRef","jsxDEV","_jsxDEV","TextNode","id","data","_s","currText","setCurrText","text","variables","setVariables","textareaRef","extractVariables","matches","match","Set","map","slice","trim","newVars","current","style","height","scrollHeight","title","inputs","v","outputs","children","ref","className","value","onChange","e","target","placeholder","minHeight","width","resize","overflow","fileName","_jsxFileName","lineNumber","columnNumber","length","join","_c","$RefreshReg$"],"sources":["C:/Users/shahi/Dropbox/PC/Downloads/frontend-20241207T060521Z-001/frontend/src/nodes/textNode.js"],"sourcesContent":["// textNode.js\n\nimport {BaseNode} from \"./BaseNode\";\nimport {useState, useEffect, useRef} from \"react\";\n\nexport const TextNode = ({id, data}) => {\n  const [currText, setCurrText] = useState(data?.text || \"{{input}}\");\n  const [variables, setVariables] = useState([]);\n  const textareaRef = useRef(null);\n\n  // Function to extract variables from text\n  const extractVariables = (text) => {\n    const matches = text.match(/\\{\\{([^}]+)\\}\\}/g) || [];\n    return [...new Set(matches.map((match) => match.slice(2, -2).trim()))];\n  };\n\n  // Update variables when text changes\n  useEffect(() => {\n    const newVars = extractVariables(currText);\n    setVariables(newVars);\n  }, [currText]);\n\n  // Auto-resize textarea\n  useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.style.height = \"auto\";\n      textareaRef.current.style.height = `${textareaRef.current.scrollHeight}px`;\n    }\n  }, [currText]);\n\n  return (\n    <BaseNode\n      id={id}\n      title=\"Text\"\n      inputs={variables.map((v) => ({id: v}))}\n      outputs={[{id: \"output\"}]}\n    >\n      <textarea\n        ref={textareaRef}\n        className=\"node-input\"\n        value={currText}\n        onChange={(e) => setCurrText(e.target.value)}\n        placeholder=\"Enter text with {{variables}}\"\n        style={{\n          minHeight: \"60px\",\n          width: \"100%\",\n          resize: \"none\",\n          overflow: \"hidden\",\n        }}\n      />\n      {variables.length > 0 && (\n        <div className=\"variables-list\">Variables: {variables.join(\", \")}</div>\n      )}\n    </BaseNode>\n  );\n};\n"],"mappings":";;AAAA;;AAEA,SAAQA,QAAQ,QAAO,YAAY;AACnC,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,QAAQ,GAAGA,CAAC;EAACC,EAAE;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAAO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,IAAI,KAAI,WAAW,CAAC;EACnE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMc,WAAW,GAAGZ,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMa,gBAAgB,GAAIJ,IAAI,IAAK;IACjC,MAAMK,OAAO,GAAGL,IAAI,CAACM,KAAK,CAAC,kBAAkB,CAAC,IAAI,EAAE;IACpD,OAAO,CAAC,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAEF,KAAK,IAAKA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACxE,CAAC;;EAED;EACApB,SAAS,CAAC,MAAM;IACd,MAAMqB,OAAO,GAAGP,gBAAgB,CAACN,QAAQ,CAAC;IAC1CI,YAAY,CAACS,OAAO,CAAC;EACvB,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;;EAEd;EACAR,SAAS,CAAC,MAAM;IACd,IAAIa,WAAW,CAACS,OAAO,EAAE;MACvBT,WAAW,CAACS,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;MACzCX,WAAW,CAACS,OAAO,CAACC,KAAK,CAACC,MAAM,GAAG,GAAGX,WAAW,CAACS,OAAO,CAACG,YAAY,IAAI;IAC5E;EACF,CAAC,EAAE,CAACjB,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACL,QAAQ;IACPO,EAAE,EAAEA,EAAG;IACPqB,KAAK,EAAC,MAAM;IACZC,MAAM,EAAEhB,SAAS,CAACO,GAAG,CAAEU,CAAC,KAAM;MAACvB,EAAE,EAAEuB;IAAC,CAAC,CAAC,CAAE;IACxCC,OAAO,EAAE,CAAC;MAACxB,EAAE,EAAE;IAAQ,CAAC,CAAE;IAAAyB,QAAA,gBAE1B3B,OAAA;MACE4B,GAAG,EAAElB,WAAY;MACjBmB,SAAS,EAAC,YAAY;MACtBC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAGC,CAAC,IAAK1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC,+BAA+B;MAC3Cd,KAAK,EAAE;QACLe,SAAS,EAAE,MAAM;QACjBC,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE;MACZ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACDlC,SAAS,CAACmC,MAAM,GAAG,CAAC,iBACnB3C,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAF,QAAA,GAAC,aAAW,EAACnB,SAAS,CAACoC,IAAI,CAAC,IAAI,CAAC;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CACvE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEf,CAAC;AAACtC,EAAA,CAlDWH,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}